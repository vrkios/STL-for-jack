function BST.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push pointer 0
return
function BST.get_root 1
push argument 0
pop pointer 0
push this 0
call Node.get_elem 1
pop local 0
push local 0
return
function BST.rroot 0
push argument 0
pop pointer 0
push this 0
return
function BST.insert 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 1
push argument 1
call Node.new 1
pop local 0
push local 0
pop this 0
push constant 0
return
label IF_FALSE0
push this 0
push argument 1
call BST.insert_pom 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push constant 0
return
function BST.insert_pom 2
push argument 0
call Node.get_elem 1
pop local 0
push argument 0
call Node.left 1
push constant 0
eq
push local 0
push argument 1
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Node.new 1
pop local 1
push argument 0
push local 1
call Node.add_left 2
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
call Node.right 1
push constant 0
eq
push local 0
push argument 1
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Node.new 1
pop local 1
push argument 0
push local 1
call Node.add_right 2
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 1
push local 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Node.left 1
push argument 1
call BST.insert_pom 2
pop temp 0
goto IF_END2
label IF_FALSE2
push argument 0
call Node.right 1
push argument 1
call BST.insert_pom 2
pop temp 0
label IF_END2
push constant 0
return
function BST.delete 6
push argument 0
pop pointer 0
push this 0
call Node.get_elem 1
pop local 0
push local 0
push argument 1
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push argument 1
call BST.delete_pom 2
pop temp 0
goto IF_END0
label IF_FALSE0
push this 0
call Node.left 1
push constant 0
eq
push this 0
call Node.right 1
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Memory.deAlloc 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 0
call Node.left 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Node.right 1
pop local 1
push this 0
call Node.dispose 1
pop temp 0
push local 1
pop this 0
goto IF_END2
label IF_FALSE2
push this 0
call Node.right 1
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Node.left 1
pop local 1
push this 0
call Node.dispose 1
pop temp 0
push local 1
pop this 0
goto IF_END3
label IF_FALSE3
push this 0
call Node.left 1
pop local 1
push local 1
call Node.right 1
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
pop local 2
push local 1
call Node.right 1
pop local 1
label WHILE_EXP0
push local 1
call Node.right 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
pop local 2
push local 1
call Node.right 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
call Node.left 1
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push local 3
call Node.add_right 2
pop temp 0
label IF_FALSE5
push this 0
call Node.right 1
pop local 3
push local 1
push local 3
call Node.add_right 2
pop temp 0
push this 0
call Node.left 1
pop local 3
push local 1
push local 3
call Node.add_left 2
pop temp 0
push this 0
call Node.dispose 1
pop temp 0
push local 1
pop this 0
goto IF_END4
label IF_FALSE4
push this 0
call Node.right 1
pop local 2
push local 1
push local 2
call Node.add_right 2
pop temp 0
push this 0
call Node.dispose 1
pop temp 0
push local 1
pop this 0
label IF_END4
label IF_END3
label IF_END2
label IF_END1
label IF_END0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
function BST.delete_pom 10
push argument 0
call Node.left 1
pop local 3
push argument 0
call Node.right 1
pop local 4
push local 3
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
call Node.get_elem 1
pop local 0
goto IF_END0
label IF_FALSE0
push constant 1
neg
pop local 0
label IF_END0
push local 4
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
call Node.get_elem 1
pop local 1
goto IF_END1
label IF_FALSE1
push constant 1
neg
pop local 1
label IF_END1
push local 0
push argument 1
eq
push local 1
push argument 1
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push argument 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 3
call Node.left 1
pop local 5
push local 3
pop local 8
push local 8
call Node.right 1
push constant 0
eq
push local 8
call Node.left 1
push constant 0
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push constant 0
call Node.add_left 2
pop temp 0
push local 8
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE4
goto IF_END3
label IF_FALSE3
push local 4
call Node.left 1
pop local 5
push local 4
pop local 8
push local 8
call Node.right 1
push constant 0
eq
push local 8
call Node.left 1
push constant 0
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
push constant 0
call Node.add_right 2
pop temp 0
push local 8
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE5
label IF_END3
push local 5
push constant 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 8
call Node.right 1
pop local 6
push argument 0
push local 6
call Node.add_right 2
pop temp 0
push constant 1
call Output.printInt 1
pop temp 0
push constant 0
return
goto IF_END6
label IF_FALSE6
push local 5
call Node.right 1
push constant 0
eq
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 5
pop local 7
push local 5
call Node.right 1
pop local 5
label WHILE_EXP0
push local 5
call Node.right 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 5
pop local 7
push local 5
call Node.right 1
pop local 5
goto WHILE_EXP0
label WHILE_END0
goto IF_END7
label IF_FALSE7
push local 0
push argument 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 0
push local 5
call Node.add_left 2
pop temp 0
push local 8
call Node.right 1
pop local 6
push local 5
push local 6
call Node.add_right 2
pop temp 0
push local 8
call Node.dispose 1
pop temp 0
push constant 0
return
goto IF_END8
label IF_FALSE8
push argument 0
push local 5
call Node.add_right 2
pop temp 0
push local 8
call Node.right 1
pop local 6
push local 5
push local 6
call Node.add_right 2
pop temp 0
push local 8
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_END8
label IF_END7
push local 5
call Node.left 1
pop local 6
push local 6
push constant 0
eq
not
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 7
push local 6
call Node.add_right 2
pop temp 0
label IF_FALSE9
push local 8
call Node.right 1
pop local 6
push local 6
push constant 0
eq
not
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 5
push local 6
call Node.add_right 2
pop temp 0
label IF_FALSE10
push local 8
call Node.left 1
pop local 6
push local 6
push constant 0
eq
not
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 5
push local 6
call Node.add_left 2
pop temp 0
label IF_FALSE11
push local 8
call Node.dispose 1
pop temp 0
label IF_END6
push constant 0
return
label IF_FALSE2
push argument 0
call Node.get_elem 1
pop local 2
push local 2
push argument 1
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push argument 0
call Node.left 1
push argument 1
call BST.delete_pom 2
pop temp 0
goto IF_END12
label IF_FALSE12
push argument 0
call Node.right 1
push argument 1
call BST.delete_pom 2
pop temp 0
label IF_END12
push constant 0
return
function BST.search 0
push argument 0
pop pointer 0
push this 0
push argument 1
call BST.search_pom 2
return
function BST.search_pom 1
push argument 0
call Node.get_elem 1
pop local 0
push local 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Node.left 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 19
call String.new 1
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 1
neg
return
goto IF_END1
label IF_FALSE1
push argument 0
call Node.left 1
push argument 1
call BST.search_pom 2
return
label IF_END1
goto IF_END0
label IF_FALSE0
push local 0
push argument 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Node.right 1
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 19
call String.new 1
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 1
neg
return
goto IF_END3
label IF_FALSE3
push argument 0
call Node.right 1
push argument 1
call BST.search_pom 2
return
label IF_END3
goto IF_END2
label IF_FALSE2
push local 0
return
label IF_END2
label IF_END0
function BST.size 0
push argument 0
pop pointer 0
push this 1
return
function BST.clear 0
push argument 0
pop pointer 0
push this 0
call BST.dispose_pom 1
pop temp 0
push constant 0
pop this 1
push constant 0
return
function BST.dispose_pom 0
push argument 0
call Node.left 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push argument 0
call Node.left 1
call BST.dispose_pom 1
pop temp 0
label IF_END0
push argument 0
call Node.right 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
goto IF_END1
label IF_FALSE1
push argument 0
call Node.right 1
call BST.dispose_pom 1
pop temp 0
label IF_END1
push argument 0
call Node.dispose 1
pop temp 0
push constant 0
return
function BST.max 2
push argument 0
pop pointer 0
push this 0
pop local 0
push this 0
call Node.get_elem 1
pop local 1
label WHILE_EXP0
push local 0
call Node.right 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Node.right 1
pop local 0
push this 0
call Node.get_elem 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
call Node.get_elem 1
pop local 1
push local 1
return
